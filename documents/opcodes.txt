Opcodes are stored backwards in the opcode, so in a 20 bit word there are 4 x 5 bit instructions, the five LSB are done first. 
When the operand is all zeros the operand is the next word.

PC 	Program Counter
A 	Address Register
T 	Top of Data Stack
S 	Second on Data Stack (e.g. R[SP])
R 	Top of Return Stack

00000		Nop 			Does nothing
00001 						Unused.
00010 		>Else 			Unconditional forwards jump relative. 
00011 		<Else 			Unconditional backwards jump relative.
01000 		>If 			jump relative forward if T(0-19) zero
01001 		<If 			jump relative backward if T(0-19) zero
01010 		>-If 			jump relative forward if T20 set
01011 		<-If 			jump relative backward if T20 set
01100 		Call 			call backwards relative
01101 		Ret 			Return from subroutine.
10000 		A 				Push A on Data Stack
10001 		@A 				Push Mem[A] on Data Stack
10010 		@A+				Push Mem[A] on Data Stack and increment A
10011 		!A 				Pop off Data Stack to Mem[A]
10100		!A+ 			Pop off Data Stack to Mem[A] and increment A
10101 		A! 				Pop A off Data Stack
10110 		POP 			Pop Data stack and Push to Return Stack
10111 		PUSH 			Pop Return stack and Push Data Stack
11000 		@R+				Push Mem[R] to Data stack and bump R
11001 		!R+ 			Pop Data stack to Mem[R], Increment R
11100 		Dup 			
11101 		Drop
11110 		Over
			+ 				Add S to T
			+* 				If T[0] add S to T.
			COM 			1's complement T
			AND 			And S to T
			-OR 			Exor S to T
			2* 				ASL
			2/ 				ASR
			#  				Push operand on stack if non-zero.
